FROM nvidia/cuda:12.6.0-cudnn-devel-ubuntu24.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility \
    CUDA_HOME="/usr/local/cuda" \
    PATH="/usr/local/cuda/bin:${PATH}" \
    LD_LIBRARY_PATH="/usr/local/cuda/compat:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}" \
    PYTHONUNBUFFERED=1

# First install basic dependencies and add deadsnakes PPA
RUN apt-get update && apt-get install -y \
    software-properties-common \
    curl \
    wget \
    git \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update

RUN apt-get update -y \
    && apt-get install -qy build-essential wget libfontconfig1

# Now install Python 3.10 and related packages
RUN apt-get install -y \
    python3.11 \
    python3.11-distutils \
    python3.11-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install pip and set Python alternatives
RUN wget https://bootstrap.pypa.io/get-pip.py \
    && python3.11 get-pip.py \
    && rm get-pip.py \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Verify Python installation
RUN python --version && python -m pip --version

# Install core dependencies
RUN python -m pip install --no-cache-dir \
    jax[cuda12]==0.4.37 \
    flax==0.10.2 \
    ml_dtypes==0.4.0 \
    optax==0.2.4 \
    orbax-checkpoint==0.10.2 \
    orbax-export==0.0.6

# Install TFDS dependencies
RUN python -m pip install --no-cache-dir \
    tensorflow==2.18.0 \
    tensorflow_datasets==4.9.7

# Install Grain
RUN python -m pip install --no-cache-dir \
    grain==0.2.2

# Install development dependencies
RUN python -m pip install --no-cache-dir \
    pytest \
    pytest-xdist

# Install additional tools and libraries
RUN python -m pip install --no-cache-dir \
    requests==2.31.0 \
    urllib3==1.26.18 \
    chardet==4.0.0 \
    ipywidgets \
    pandas \
    matplotlib \
    wandb \
    rich \
    seaborn \
    tqdm \
    tensorboard \
    datasets \
    ml_collections \
    plotly

# Set environment variable for wandb API key # Login to wandb
# ENV WANDB_API_KEY=
# RUN wandb login $WANDB_API_KEY 

# Install TexLive with scheme-basic
RUN wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz; \
	mkdir /install-tl-unx; \
	tar -xvf install-tl-unx.tar.gz -C /install-tl-unx --strip-components=1; \
    echo "selected_scheme scheme-full" >> /install-tl-unx/texlive.profile; \
	/install-tl-unx/install-tl -profile /install-tl-unx/texlive.profile; \
    rm -r /install-tl-unx; \
	rm install-tl-unx.tar.gz

ENV PATH="/usr/local/texlive/2024/bin/x86_64-linux/:${PATH}"

# docker build -t nguyenvanhaibk92/jaxaistack_latex:2024.12.10 .
# docker build -t nguyenvanhaibk92/jaxaistack_latex:2024.12.10 .
# apptainer pull docker://nguyenvanhaibk92/jaxaistack_latex:2024.12.10
# apptainer shell --nv jaxaistack


